/*
Workflow APIs

This APIs for iwf SDKs to operate workflows

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package iwfidl

import (
	"encoding/json"
	"fmt"
)

// InterStateChannelRequestStatus the model 'InterStateChannelRequestStatus'
type InterStateChannelRequestStatus string

// List of InterStateChannelRequestStatus
const (
	WAITING InterStateChannelRequestStatus = "WAITING"
	RECEIVED InterStateChannelRequestStatus = "RECEIVED"
)

// All allowed values of InterStateChannelRequestStatus enum
var AllowedInterStateChannelRequestStatusEnumValues = []InterStateChannelRequestStatus{
	"WAITING",
	"RECEIVED",
}

func (v *InterStateChannelRequestStatus) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := InterStateChannelRequestStatus(value)
	for _, existing := range AllowedInterStateChannelRequestStatusEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid InterStateChannelRequestStatus", value)
}

// NewInterStateChannelRequestStatusFromValue returns a pointer to a valid InterStateChannelRequestStatus
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewInterStateChannelRequestStatusFromValue(v string) (*InterStateChannelRequestStatus, error) {
	ev := InterStateChannelRequestStatus(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for InterStateChannelRequestStatus: valid values are %v", v, AllowedInterStateChannelRequestStatusEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v InterStateChannelRequestStatus) IsValid() bool {
	for _, existing := range AllowedInterStateChannelRequestStatusEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to InterStateChannelRequestStatus value
func (v InterStateChannelRequestStatus) Ptr() *InterStateChannelRequestStatus {
	return &v
}

type NullableInterStateChannelRequestStatus struct {
	value *InterStateChannelRequestStatus
	isSet bool
}

func (v NullableInterStateChannelRequestStatus) Get() *InterStateChannelRequestStatus {
	return v.value
}

func (v *NullableInterStateChannelRequestStatus) Set(val *InterStateChannelRequestStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableInterStateChannelRequestStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableInterStateChannelRequestStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInterStateChannelRequestStatus(val *InterStateChannelRequestStatus) *NullableInterStateChannelRequestStatus {
	return &NullableInterStateChannelRequestStatus{value: val, isSet: true}
}

func (v NullableInterStateChannelRequestStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInterStateChannelRequestStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

