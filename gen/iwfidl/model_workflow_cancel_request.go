/*
Workflow APIs

This APIs for iwf SDKs to operate workflows

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package iwfidl

import (
	"encoding/json"
)

// WorkflowCancelRequest struct for WorkflowCancelRequest
type WorkflowCancelRequest struct {
	WorkflowId string `json:"workflowId"`
	WorkflowRunId *string `json:"workflowRunId,omitempty"`
	Reason *string `json:"reason,omitempty"`
}

// NewWorkflowCancelRequest instantiates a new WorkflowCancelRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWorkflowCancelRequest(workflowId string) *WorkflowCancelRequest {
	this := WorkflowCancelRequest{}
	this.WorkflowId = workflowId
	return &this
}

// NewWorkflowCancelRequestWithDefaults instantiates a new WorkflowCancelRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWorkflowCancelRequestWithDefaults() *WorkflowCancelRequest {
	this := WorkflowCancelRequest{}
	return &this
}

// GetWorkflowId returns the WorkflowId field value
func (o *WorkflowCancelRequest) GetWorkflowId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.WorkflowId
}

// GetWorkflowIdOk returns a tuple with the WorkflowId field value
// and a boolean to check if the value has been set.
func (o *WorkflowCancelRequest) GetWorkflowIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WorkflowId, true
}

// SetWorkflowId sets field value
func (o *WorkflowCancelRequest) SetWorkflowId(v string) {
	o.WorkflowId = v
}

// GetWorkflowRunId returns the WorkflowRunId field value if set, zero value otherwise.
func (o *WorkflowCancelRequest) GetWorkflowRunId() string {
	if o == nil || o.WorkflowRunId == nil {
		var ret string
		return ret
	}
	return *o.WorkflowRunId
}

// GetWorkflowRunIdOk returns a tuple with the WorkflowRunId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowCancelRequest) GetWorkflowRunIdOk() (*string, bool) {
	if o == nil || o.WorkflowRunId == nil {
		return nil, false
	}
	return o.WorkflowRunId, true
}

// HasWorkflowRunId returns a boolean if a field has been set.
func (o *WorkflowCancelRequest) HasWorkflowRunId() bool {
	if o != nil && o.WorkflowRunId != nil {
		return true
	}

	return false
}

// SetWorkflowRunId gets a reference to the given string and assigns it to the WorkflowRunId field.
func (o *WorkflowCancelRequest) SetWorkflowRunId(v string) {
	o.WorkflowRunId = &v
}

// GetReason returns the Reason field value if set, zero value otherwise.
func (o *WorkflowCancelRequest) GetReason() string {
	if o == nil || o.Reason == nil {
		var ret string
		return ret
	}
	return *o.Reason
}

// GetReasonOk returns a tuple with the Reason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowCancelRequest) GetReasonOk() (*string, bool) {
	if o == nil || o.Reason == nil {
		return nil, false
	}
	return o.Reason, true
}

// HasReason returns a boolean if a field has been set.
func (o *WorkflowCancelRequest) HasReason() bool {
	if o != nil && o.Reason != nil {
		return true
	}

	return false
}

// SetReason gets a reference to the given string and assigns it to the Reason field.
func (o *WorkflowCancelRequest) SetReason(v string) {
	o.Reason = &v
}

func (o WorkflowCancelRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["workflowId"] = o.WorkflowId
	}
	if o.WorkflowRunId != nil {
		toSerialize["workflowRunId"] = o.WorkflowRunId
	}
	if o.Reason != nil {
		toSerialize["reason"] = o.Reason
	}
	return json.Marshal(toSerialize)
}

type NullableWorkflowCancelRequest struct {
	value *WorkflowCancelRequest
	isSet bool
}

func (v NullableWorkflowCancelRequest) Get() *WorkflowCancelRequest {
	return v.value
}

func (v *NullableWorkflowCancelRequest) Set(val *WorkflowCancelRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkflowCancelRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkflowCancelRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkflowCancelRequest(val *WorkflowCancelRequest) *NullableWorkflowCancelRequest {
	return &NullableWorkflowCancelRequest{value: val, isSet: true}
}

func (v NullableWorkflowCancelRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkflowCancelRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


