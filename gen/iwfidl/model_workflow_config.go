/*
Workflow APIs

This APIs for iwf SDKs to operate workflows

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package iwfidl

import (
	"encoding/json"
)

// checks if the WorkflowConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WorkflowConfig{}

// WorkflowConfig struct for WorkflowConfig
type WorkflowConfig struct {
	DisableSystemSearchAttribute                 *bool  `json:"disableSystemSearchAttribute,omitempty"`
	ContinueAsNewThresholdExecutedStateExecution *int32 `json:"continueAsNewThresholdExecutedStateExecution,omitempty"`
	ContinueAsNewThresholdSignalsReceived        *int32 `json:"continueAsNewThresholdSignalsReceived,omitempty"`
	ContinueAsNewPageSizeInBytes                 *int32 `json:"continueAsNewPageSizeInBytes,omitempty"`
}

// NewWorkflowConfig instantiates a new WorkflowConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWorkflowConfig() *WorkflowConfig {
	this := WorkflowConfig{}
	return &this
}

// NewWorkflowConfigWithDefaults instantiates a new WorkflowConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWorkflowConfigWithDefaults() *WorkflowConfig {
	this := WorkflowConfig{}
	return &this
}

// GetDisableSystemSearchAttribute returns the DisableSystemSearchAttribute field value if set, zero value otherwise.
func (o *WorkflowConfig) GetDisableSystemSearchAttribute() bool {
	if o == nil || IsNil(o.DisableSystemSearchAttribute) {
		var ret bool
		return ret
	}
	return *o.DisableSystemSearchAttribute
}

// GetDisableSystemSearchAttributeOk returns a tuple with the DisableSystemSearchAttribute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowConfig) GetDisableSystemSearchAttributeOk() (*bool, bool) {
	if o == nil || IsNil(o.DisableSystemSearchAttribute) {
		return nil, false
	}
	return o.DisableSystemSearchAttribute, true
}

// HasDisableSystemSearchAttribute returns a boolean if a field has been set.
func (o *WorkflowConfig) HasDisableSystemSearchAttribute() bool {
	if o != nil && !IsNil(o.DisableSystemSearchAttribute) {
		return true
	}

	return false
}

// SetDisableSystemSearchAttribute gets a reference to the given bool and assigns it to the DisableSystemSearchAttribute field.
func (o *WorkflowConfig) SetDisableSystemSearchAttribute(v bool) {
	o.DisableSystemSearchAttribute = &v
}

// GetContinueAsNewThresholdExecutedStateExecution returns the ContinueAsNewThresholdExecutedStateExecution field value if set, zero value otherwise.
func (o *WorkflowConfig) GetContinueAsNewThresholdExecutedStateExecution() int32 {
	if o == nil || IsNil(o.ContinueAsNewThresholdExecutedStateExecution) {
		var ret int32
		return ret
	}
	return *o.ContinueAsNewThresholdExecutedStateExecution
}

// GetContinueAsNewThresholdExecutedStateExecutionOk returns a tuple with the ContinueAsNewThresholdExecutedStateExecution field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowConfig) GetContinueAsNewThresholdExecutedStateExecutionOk() (*int32, bool) {
	if o == nil || IsNil(o.ContinueAsNewThresholdExecutedStateExecution) {
		return nil, false
	}
	return o.ContinueAsNewThresholdExecutedStateExecution, true
}

// HasContinueAsNewThresholdExecutedStateExecution returns a boolean if a field has been set.
func (o *WorkflowConfig) HasContinueAsNewThresholdExecutedStateExecution() bool {
	if o != nil && !IsNil(o.ContinueAsNewThresholdExecutedStateExecution) {
		return true
	}

	return false
}

// SetContinueAsNewThresholdExecutedStateExecution gets a reference to the given int32 and assigns it to the ContinueAsNewThresholdExecutedStateExecution field.
func (o *WorkflowConfig) SetContinueAsNewThresholdExecutedStateExecution(v int32) {
	o.ContinueAsNewThresholdExecutedStateExecution = &v
}

// GetContinueAsNewThresholdSignalsReceived returns the ContinueAsNewThresholdSignalsReceived field value if set, zero value otherwise.
func (o *WorkflowConfig) GetContinueAsNewThresholdSignalsReceived() int32 {
	if o == nil || IsNil(o.ContinueAsNewThresholdSignalsReceived) {
		var ret int32
		return ret
	}
	return *o.ContinueAsNewThresholdSignalsReceived
}

// GetContinueAsNewThresholdSignalsReceivedOk returns a tuple with the ContinueAsNewThresholdSignalsReceived field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowConfig) GetContinueAsNewThresholdSignalsReceivedOk() (*int32, bool) {
	if o == nil || IsNil(o.ContinueAsNewThresholdSignalsReceived) {
		return nil, false
	}
	return o.ContinueAsNewThresholdSignalsReceived, true
}

// HasContinueAsNewThresholdSignalsReceived returns a boolean if a field has been set.
func (o *WorkflowConfig) HasContinueAsNewThresholdSignalsReceived() bool {
	if o != nil && !IsNil(o.ContinueAsNewThresholdSignalsReceived) {
		return true
	}

	return false
}

// SetContinueAsNewThresholdSignalsReceived gets a reference to the given int32 and assigns it to the ContinueAsNewThresholdSignalsReceived field.
func (o *WorkflowConfig) SetContinueAsNewThresholdSignalsReceived(v int32) {
	o.ContinueAsNewThresholdSignalsReceived = &v
}

// GetContinueAsNewPageSizeInBytes returns the ContinueAsNewPageSizeInBytes field value if set, zero value otherwise.
func (o *WorkflowConfig) GetContinueAsNewPageSizeInBytes() int32 {
	if o == nil || IsNil(o.ContinueAsNewPageSizeInBytes) {
		var ret int32
		return ret
	}
	return *o.ContinueAsNewPageSizeInBytes
}

// GetContinueAsNewPageSizeInBytesOk returns a tuple with the ContinueAsNewPageSizeInBytes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowConfig) GetContinueAsNewPageSizeInBytesOk() (*int32, bool) {
	if o == nil || IsNil(o.ContinueAsNewPageSizeInBytes) {
		return nil, false
	}
	return o.ContinueAsNewPageSizeInBytes, true
}

// HasContinueAsNewPageSizeInBytes returns a boolean if a field has been set.
func (o *WorkflowConfig) HasContinueAsNewPageSizeInBytes() bool {
	if o != nil && !IsNil(o.ContinueAsNewPageSizeInBytes) {
		return true
	}

	return false
}

// SetContinueAsNewPageSizeInBytes gets a reference to the given int32 and assigns it to the ContinueAsNewPageSizeInBytes field.
func (o *WorkflowConfig) SetContinueAsNewPageSizeInBytes(v int32) {
	o.ContinueAsNewPageSizeInBytes = &v
}

func (o WorkflowConfig) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WorkflowConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DisableSystemSearchAttribute) {
		toSerialize["disableSystemSearchAttribute"] = o.DisableSystemSearchAttribute
	}
	if !IsNil(o.ContinueAsNewThresholdExecutedStateExecution) {
		toSerialize["continueAsNewThresholdExecutedStateExecution"] = o.ContinueAsNewThresholdExecutedStateExecution
	}
	if !IsNil(o.ContinueAsNewThresholdSignalsReceived) {
		toSerialize["continueAsNewThresholdSignalsReceived"] = o.ContinueAsNewThresholdSignalsReceived
	}
	if !IsNil(o.ContinueAsNewPageSizeInBytes) {
		toSerialize["continueAsNewPageSizeInBytes"] = o.ContinueAsNewPageSizeInBytes
	}
	return toSerialize, nil
}

type NullableWorkflowConfig struct {
	value *WorkflowConfig
	isSet bool
}

func (v NullableWorkflowConfig) Get() *WorkflowConfig {
	return v.value
}

func (v *NullableWorkflowConfig) Set(val *WorkflowConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkflowConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkflowConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkflowConfig(val *WorkflowConfig) *NullableWorkflowConfig {
	return &NullableWorkflowConfig{value: val, isSet: true}
}

func (v NullableWorkflowConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkflowConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
