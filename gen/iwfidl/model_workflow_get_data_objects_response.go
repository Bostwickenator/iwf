/*
Workflow APIs

This APIs for iwf SDKs to operate workflows

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package iwfidl

import (
	"encoding/json"
)

// WorkflowGetDataObjectsResponse struct for WorkflowGetDataObjectsResponse
type WorkflowGetDataObjectsResponse struct {
	Keys []KeyValue `json:"keys,omitempty"`
}

// NewWorkflowGetDataObjectsResponse instantiates a new WorkflowGetDataObjectsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWorkflowGetDataObjectsResponse() *WorkflowGetDataObjectsResponse {
	this := WorkflowGetDataObjectsResponse{}
	return &this
}

// NewWorkflowGetDataObjectsResponseWithDefaults instantiates a new WorkflowGetDataObjectsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWorkflowGetDataObjectsResponseWithDefaults() *WorkflowGetDataObjectsResponse {
	this := WorkflowGetDataObjectsResponse{}
	return &this
}

// GetKeys returns the Keys field value if set, zero value otherwise.
func (o *WorkflowGetDataObjectsResponse) GetKeys() []KeyValue {
	if o == nil || o.Keys == nil {
		var ret []KeyValue
		return ret
	}
	return o.Keys
}

// GetKeysOk returns a tuple with the Keys field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowGetDataObjectsResponse) GetKeysOk() ([]KeyValue, bool) {
	if o == nil || o.Keys == nil {
		return nil, false
	}
	return o.Keys, true
}

// HasKeys returns a boolean if a field has been set.
func (o *WorkflowGetDataObjectsResponse) HasKeys() bool {
	if o != nil && o.Keys != nil {
		return true
	}

	return false
}

// SetKeys gets a reference to the given []KeyValue and assigns it to the Keys field.
func (o *WorkflowGetDataObjectsResponse) SetKeys(v []KeyValue) {
	o.Keys = v
}

func (o WorkflowGetDataObjectsResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Keys != nil {
		toSerialize["keys"] = o.Keys
	}
	return json.Marshal(toSerialize)
}

type NullableWorkflowGetDataObjectsResponse struct {
	value *WorkflowGetDataObjectsResponse
	isSet bool
}

func (v NullableWorkflowGetDataObjectsResponse) Get() *WorkflowGetDataObjectsResponse {
	return v.value
}

func (v *NullableWorkflowGetDataObjectsResponse) Set(val *WorkflowGetDataObjectsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkflowGetDataObjectsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkflowGetDataObjectsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkflowGetDataObjectsResponse(val *WorkflowGetDataObjectsResponse) *NullableWorkflowGetDataObjectsResponse {
	return &NullableWorkflowGetDataObjectsResponse{value: val, isSet: true}
}

func (v NullableWorkflowGetDataObjectsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkflowGetDataObjectsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


