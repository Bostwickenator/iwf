/*
Workflow APIs

This APIs for iwf SDKs to operate workflows

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package iwfidl

import (
	"encoding/json"
)

// WorkflowResetRequest struct for WorkflowResetRequest
type WorkflowResetRequest struct {
	WorkflowId string `json:"workflowId"`
	WorkflowRunId *string `json:"workflowRunId,omitempty"`
	ResetType string `json:"resetType"`
	HistoryEventId *int32 `json:"historyEventId,omitempty"`
	Reason *string `json:"reason,omitempty"`
	DecisionOffset *int32 `json:"decision_offset,omitempty"`
	ResetBadBinaryChecksum *string `json:"reset_bad_binary_checksum,omitempty"`
	EarliestTime *string `json:"earliest_time,omitempty"`
	SkipSignalReapply *bool `json:"skip_signal_reapply,omitempty"`
}

// NewWorkflowResetRequest instantiates a new WorkflowResetRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWorkflowResetRequest(workflowId string, resetType string) *WorkflowResetRequest {
	this := WorkflowResetRequest{}
	this.WorkflowId = workflowId
	this.ResetType = resetType
	return &this
}

// NewWorkflowResetRequestWithDefaults instantiates a new WorkflowResetRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWorkflowResetRequestWithDefaults() *WorkflowResetRequest {
	this := WorkflowResetRequest{}
	return &this
}

// GetWorkflowId returns the WorkflowId field value
func (o *WorkflowResetRequest) GetWorkflowId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.WorkflowId
}

// GetWorkflowIdOk returns a tuple with the WorkflowId field value
// and a boolean to check if the value has been set.
func (o *WorkflowResetRequest) GetWorkflowIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WorkflowId, true
}

// SetWorkflowId sets field value
func (o *WorkflowResetRequest) SetWorkflowId(v string) {
	o.WorkflowId = v
}

// GetWorkflowRunId returns the WorkflowRunId field value if set, zero value otherwise.
func (o *WorkflowResetRequest) GetWorkflowRunId() string {
	if o == nil || o.WorkflowRunId == nil {
		var ret string
		return ret
	}
	return *o.WorkflowRunId
}

// GetWorkflowRunIdOk returns a tuple with the WorkflowRunId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowResetRequest) GetWorkflowRunIdOk() (*string, bool) {
	if o == nil || o.WorkflowRunId == nil {
		return nil, false
	}
	return o.WorkflowRunId, true
}

// HasWorkflowRunId returns a boolean if a field has been set.
func (o *WorkflowResetRequest) HasWorkflowRunId() bool {
	if o != nil && o.WorkflowRunId != nil {
		return true
	}

	return false
}

// SetWorkflowRunId gets a reference to the given string and assigns it to the WorkflowRunId field.
func (o *WorkflowResetRequest) SetWorkflowRunId(v string) {
	o.WorkflowRunId = &v
}

// GetResetType returns the ResetType field value
func (o *WorkflowResetRequest) GetResetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ResetType
}

// GetResetTypeOk returns a tuple with the ResetType field value
// and a boolean to check if the value has been set.
func (o *WorkflowResetRequest) GetResetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ResetType, true
}

// SetResetType sets field value
func (o *WorkflowResetRequest) SetResetType(v string) {
	o.ResetType = v
}

// GetHistoryEventId returns the HistoryEventId field value if set, zero value otherwise.
func (o *WorkflowResetRequest) GetHistoryEventId() int32 {
	if o == nil || o.HistoryEventId == nil {
		var ret int32
		return ret
	}
	return *o.HistoryEventId
}

// GetHistoryEventIdOk returns a tuple with the HistoryEventId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowResetRequest) GetHistoryEventIdOk() (*int32, bool) {
	if o == nil || o.HistoryEventId == nil {
		return nil, false
	}
	return o.HistoryEventId, true
}

// HasHistoryEventId returns a boolean if a field has been set.
func (o *WorkflowResetRequest) HasHistoryEventId() bool {
	if o != nil && o.HistoryEventId != nil {
		return true
	}

	return false
}

// SetHistoryEventId gets a reference to the given int32 and assigns it to the HistoryEventId field.
func (o *WorkflowResetRequest) SetHistoryEventId(v int32) {
	o.HistoryEventId = &v
}

// GetReason returns the Reason field value if set, zero value otherwise.
func (o *WorkflowResetRequest) GetReason() string {
	if o == nil || o.Reason == nil {
		var ret string
		return ret
	}
	return *o.Reason
}

// GetReasonOk returns a tuple with the Reason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowResetRequest) GetReasonOk() (*string, bool) {
	if o == nil || o.Reason == nil {
		return nil, false
	}
	return o.Reason, true
}

// HasReason returns a boolean if a field has been set.
func (o *WorkflowResetRequest) HasReason() bool {
	if o != nil && o.Reason != nil {
		return true
	}

	return false
}

// SetReason gets a reference to the given string and assigns it to the Reason field.
func (o *WorkflowResetRequest) SetReason(v string) {
	o.Reason = &v
}

// GetDecisionOffset returns the DecisionOffset field value if set, zero value otherwise.
func (o *WorkflowResetRequest) GetDecisionOffset() int32 {
	if o == nil || o.DecisionOffset == nil {
		var ret int32
		return ret
	}
	return *o.DecisionOffset
}

// GetDecisionOffsetOk returns a tuple with the DecisionOffset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowResetRequest) GetDecisionOffsetOk() (*int32, bool) {
	if o == nil || o.DecisionOffset == nil {
		return nil, false
	}
	return o.DecisionOffset, true
}

// HasDecisionOffset returns a boolean if a field has been set.
func (o *WorkflowResetRequest) HasDecisionOffset() bool {
	if o != nil && o.DecisionOffset != nil {
		return true
	}

	return false
}

// SetDecisionOffset gets a reference to the given int32 and assigns it to the DecisionOffset field.
func (o *WorkflowResetRequest) SetDecisionOffset(v int32) {
	o.DecisionOffset = &v
}

// GetResetBadBinaryChecksum returns the ResetBadBinaryChecksum field value if set, zero value otherwise.
func (o *WorkflowResetRequest) GetResetBadBinaryChecksum() string {
	if o == nil || o.ResetBadBinaryChecksum == nil {
		var ret string
		return ret
	}
	return *o.ResetBadBinaryChecksum
}

// GetResetBadBinaryChecksumOk returns a tuple with the ResetBadBinaryChecksum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowResetRequest) GetResetBadBinaryChecksumOk() (*string, bool) {
	if o == nil || o.ResetBadBinaryChecksum == nil {
		return nil, false
	}
	return o.ResetBadBinaryChecksum, true
}

// HasResetBadBinaryChecksum returns a boolean if a field has been set.
func (o *WorkflowResetRequest) HasResetBadBinaryChecksum() bool {
	if o != nil && o.ResetBadBinaryChecksum != nil {
		return true
	}

	return false
}

// SetResetBadBinaryChecksum gets a reference to the given string and assigns it to the ResetBadBinaryChecksum field.
func (o *WorkflowResetRequest) SetResetBadBinaryChecksum(v string) {
	o.ResetBadBinaryChecksum = &v
}

// GetEarliestTime returns the EarliestTime field value if set, zero value otherwise.
func (o *WorkflowResetRequest) GetEarliestTime() string {
	if o == nil || o.EarliestTime == nil {
		var ret string
		return ret
	}
	return *o.EarliestTime
}

// GetEarliestTimeOk returns a tuple with the EarliestTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowResetRequest) GetEarliestTimeOk() (*string, bool) {
	if o == nil || o.EarliestTime == nil {
		return nil, false
	}
	return o.EarliestTime, true
}

// HasEarliestTime returns a boolean if a field has been set.
func (o *WorkflowResetRequest) HasEarliestTime() bool {
	if o != nil && o.EarliestTime != nil {
		return true
	}

	return false
}

// SetEarliestTime gets a reference to the given string and assigns it to the EarliestTime field.
func (o *WorkflowResetRequest) SetEarliestTime(v string) {
	o.EarliestTime = &v
}

// GetSkipSignalReapply returns the SkipSignalReapply field value if set, zero value otherwise.
func (o *WorkflowResetRequest) GetSkipSignalReapply() bool {
	if o == nil || o.SkipSignalReapply == nil {
		var ret bool
		return ret
	}
	return *o.SkipSignalReapply
}

// GetSkipSignalReapplyOk returns a tuple with the SkipSignalReapply field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowResetRequest) GetSkipSignalReapplyOk() (*bool, bool) {
	if o == nil || o.SkipSignalReapply == nil {
		return nil, false
	}
	return o.SkipSignalReapply, true
}

// HasSkipSignalReapply returns a boolean if a field has been set.
func (o *WorkflowResetRequest) HasSkipSignalReapply() bool {
	if o != nil && o.SkipSignalReapply != nil {
		return true
	}

	return false
}

// SetSkipSignalReapply gets a reference to the given bool and assigns it to the SkipSignalReapply field.
func (o *WorkflowResetRequest) SetSkipSignalReapply(v bool) {
	o.SkipSignalReapply = &v
}

func (o WorkflowResetRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["workflowId"] = o.WorkflowId
	}
	if o.WorkflowRunId != nil {
		toSerialize["workflowRunId"] = o.WorkflowRunId
	}
	if true {
		toSerialize["resetType"] = o.ResetType
	}
	if o.HistoryEventId != nil {
		toSerialize["historyEventId"] = o.HistoryEventId
	}
	if o.Reason != nil {
		toSerialize["reason"] = o.Reason
	}
	if o.DecisionOffset != nil {
		toSerialize["decision_offset"] = o.DecisionOffset
	}
	if o.ResetBadBinaryChecksum != nil {
		toSerialize["reset_bad_binary_checksum"] = o.ResetBadBinaryChecksum
	}
	if o.EarliestTime != nil {
		toSerialize["earliest_time"] = o.EarliestTime
	}
	if o.SkipSignalReapply != nil {
		toSerialize["skip_signal_reapply"] = o.SkipSignalReapply
	}
	return json.Marshal(toSerialize)
}

type NullableWorkflowResetRequest struct {
	value *WorkflowResetRequest
	isSet bool
}

func (v NullableWorkflowResetRequest) Get() *WorkflowResetRequest {
	return v.value
}

func (v *NullableWorkflowResetRequest) Set(val *WorkflowResetRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkflowResetRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkflowResetRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkflowResetRequest(val *WorkflowResetRequest) *NullableWorkflowResetRequest {
	return &NullableWorkflowResetRequest{value: val, isSet: true}
}

func (v NullableWorkflowResetRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkflowResetRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


